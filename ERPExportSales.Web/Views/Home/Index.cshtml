@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using ERPExportSales.Web.Models
@model ExportSalesModel
@*<ul class="breadcrumb">
    <li><a href="/Home/Index">Home</a></li>
    <li class="active">Order</li>
</ul>*@
<!-- Content Header (Page header) -->
<section class="content-header">
    @*<h1>
        Top Navigation
        <small>Example 2.0</small>
    </h1>*@
    <ol class="breadcrumb">
        <li><a href="/Home/Index">Home</a></li>
        <li class="active">Order</li>
    </ol>
</section>
<section class="content">
    <form role="form" ng-app="myApp" ng-controller="formCtrl" class="form-horizontal" style="margin-top: 20px;"
          name="myForm" novalidate>

        <div class="col-xs-12">
            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#settings" data-toggle="tab" aria-expanded="true">Search</a></li>
                    <li class=""><a href="#activity" data-toggle="tab" aria-expanded="false">Information</a></li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="settings">
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="box box-primary">
                                    <div class="box-header with-border">
                                        <h3 class="box-title">Orders</h3>
                                    </div>
                                    <div class="box-body box-profile">
                                        <div class="box">
                                            @*<div class="box-header">
                                                    <h3 class="box-title">数据信息</h3>
                                                </div>*@
                                            <!-- /.box-header -->
                                            <div class="box-body">
                                                <div id="example1_wrapper" class="dataTables_wrapper form-inline dt-bootstrap">
                                                    <div class="row">
                                                        <div class="col-xs-12" id="">
                                                            <div class="pull-left form-inline">
                                                                @using (Ajax.BeginForm("QueryOrder", "Home",
                                                                            new AjaxOptions
                                                                            {
                                                                                HttpMethod = "Post",
                                                                                UpdateTargetId = "searchResult",
                                                                                OnBegin = "$('#divOrders').fadeOut('slow')",
                                                                                OnComplete = "$('#divOrders').fadeIn('slow')",
                                                                                LoadingElementId = "loadingDiv",
                                                                                InsertionMode = InsertionMode.Replace,
                                                                            }))
                                                                {
                                                                    <p>
                                                                        @if (Model != null && Model.UserModel != null) {
                                                                            if (Model.UserModel.UserType.Equals("1"))
                                                                            {
                                                                                <label>Customer</label>@Html.TextBoxFor(p => p.QueryModel.Customer, "", new { @class = "form-control" });
                                                                            }else
                                                                            {
                                                                                Model.QueryModel.Customer = "";
                                                                            }
                                                                        }
                                                                        <label>
                                                                            PO No. @Html.TextBoxFor(p => p.QueryModel.PONo, "", new { @class = "form-control" })
                                                                        </label>
                                                                        <label>
                                                                            SC No. @Html.TextBoxFor(p => p.QueryModel.SCNo, "", new { @class = "form-control" })
                                                                        </label>
                                                                                <label>
                                                                                    Invoice No.</label> @Html.TextBoxFor(p => p.QueryModel.InvoiceNo, "", new { @class = "form-control" })
                                                                                    
                                                                                    <button type="submit" class="btn btn-primary">Search</button>
</p>
                                                                    @*@Ajax.ActionLink("Previous", "OrderQuery", "Home", new { QueryModel =Model.QueryModel,InvoiceNo=Model.QueryModel.InvoiceNo ,IsBtnQuery = true }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "divOrders", OnBegin = "$('#divOrders').fadeOut('slow')", OnComplete = "$('#divOrders').fadeIn('slow')", LoadingElementId = "loadingDiv" }, new { @class = "btn btn-primary" })*@



                                                                }


                                                            </div>
                                                            <div id="loadingDiv" style="display:none" class="form-inline">
                                                                <img src="@Url.Content("~/Content/img/loading.gif")" /><h3>Loading...</h3>
                                                            </div>
                                                            @{Html.RenderAction("OrderQuery");}


                                                            @*@Html.Pager(Model.OrderList, new PagerOptions
                                                                {
                                                                    PageIndexParameterName = "pageNum",
                                                                    ContainerTagName = "ul",
                                                                    FirstPageText = "First",
                                                                    PrevPageText = "Previous",
                                                                    NextPageText = "Next",
                                                                    LastPageText = "Last",
                                                                    CssClass = "pagination",
                                                                    CurrentPagerItemTemplate = "<li class=\"active\"><a href=\"#\">{0}</a></li>",
                                                                    DisabledPagerItemTemplate = "<li class=\"disabled\"><a>{0}</a></li>",
                                                                    PagerItemTemplate = "<li>{0}</li>"
                                                                })*@
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- /.box-body -->
                                    </div>
                                </div>
                                <!-- /.box - body-->
                            </div>
                        </div>
                    </div>
                    <!-- /.tab - pane-->
                    <div class="tab-pane" id="activity">
                        <div class="row">
                            <div class="col-xs-6">
                                <!--USDCNY -->
                                @Html.Partial("USDCNY")
                                <!-- /.box -->
                                <!--Freight -->
                                @{Html.RenderAction("Freight");}
                                <!-- /.box -->
                            </div>
                            <!-- /.col -->
                            <div class="col-xs-6">
                                <!--Q195-->
                                @Html.Partial("Q195")
                                <!-- /.nav-tabs-custom -->
                                <!--PublicHoliday-->
                                @{Html.RenderAction("PublicHoliday");}
                            </div>
                            <!-- /.col -->
                        </div>
                    </div>
                    <!-- /.tab-pane -->
                </div>
                <!-- /.tab - pane-->

            </div>
            <!-- /.tab-content -->
        </div>
        <!-- /.nav-tabs-custom -->

    </form>
</section>
@section Scripts{
    <!--{Html.RegisterMvcPagerScriptResource();}-->
    <script type="text/javascript">
        $(document).ready(function () {
            // $("#sinaFrame").attr("src", "http://gu.sina.cn/fx/hq/quotes.php?code=USDCNY");
            //$("#rbFrame").attr("src", "http://gu.sina.cn/ft/hq/nf.php?symbol=RB0");

            var queryScNo = '@ViewBag.ScNo';
            var queryPoNo = '@ViewBag.PoNo';
            var queryInvoiceNo = '@ViewBag.InvoiceNo';
            if (queryScNo.length > 0) {
                $("#QueryModel_SCNo").val(queryScNo);
            }
            if (queryPoNo.length > 0) {
                $("#QueryModel_PONo").val(queryPoNo);
            }
            if (queryInvoiceNo.length > 0) {
                $("#QueryModel_InvoiceNo").val(queryInvoiceNo);
            }

            $('#tbHoliday').DataTable({
                "bSort": false,
                "searching": false,
                "pagingType": "simple",
                "info": false,
                "pageLength": 20,
                "lengthChange": false
            });
            // $('#tbOrders').DataTable();
            $('#tbFreight').DataTable({
                "bSort": false,
                "searching": false,
                "pagingType": "simple",
                "info": false,
                "pageLength": 15,
                "lengthChange": false
            });


            $.ajax({
                type: "POST",
                url: "/Chart/GetUSDCNY",
                dataType: "json",
                success: function (data) {
                    drawUSDCNYLines(data);
                }
            });
            $.ajax({
                type: "POST",
                url: "/Chart/GetQ195",
                dataType: "json",
                success: function (data) {
                    drawQ195Lines(data);
                }
            });

            $.ajax({
                type: "POST",
                url: "/Chart/GetNewUSDCNY",
                dataType: "json",
                success: function (data) {
                    $("#newUSDCNY").html("Update time:  <b>" + data.PublishDate + "</b> USDCNY: <h4 class='box-title'><b>" + data.Price + "</b></h4>");
                }
            });
            $.ajax({
                type: "POST",
                url: "/Chart/GetNewQ195",
                dataType: "json",
                success: function (data) {
                    $("#newQ195").html("Update time:  <b>" + data.PublishDate + "</b> Price: <h4 class='box-title'><b>" + data.Price + "</b></h4> RMB/T");
                }
            });
            //$.getJSON("../../Files/data/data.json", function (data, status) {
            //    if (status == 'success') {
            //        result = data;
            //        drawLines(data);
            //    } else {
            //        return false;
            //    }
            //})
            // var dataSource = getData();


            // 根据配置项和数据显示图表
            function drawUSDCNYLines(data) {
                $('#usdcnyDiv').width("680px");
                $('#usdcnyDiv').height("350px")
                var myChart = echarts.init(document.getElementById('usdcnyDiv'));

                myChart.setOption({
                    title: {
                        text: 'USDCNY',
                        x: 'center'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        top: 25,
                        left: 'right',
                        data: ['央行折算']
                    },
                    grid: {
                        left: 50,
                        right: 40
                    },
                    xAxis: {
                        data: data.map(function (item) {
                            return item.PublishDate;
                        }),
                        inverse: true
                    },
                    yAxis: {
                        name: 'RMB',
                        min: 6
                    },
                    series: [
                        {
                            name: 'USDCNY',
                            type: 'line',
                            //markPoint: {
                            //    data: [{ type: 'min', name: '最小值', symbolSize: 70 }]
                            //},
                            data: data.map(function (item) {
                                return item.Price;
                            })
                        }
                        //, {
                        //    name: '现汇买入',
                        //    type: 'line',
                        //    markPoint: {
                        //        data: [{ type: 'max', name: '最大值', symbolSize: 70 }]
                        //    },
                        //    data: data.map(function (item) {
                        //        return item[0];
                        //    })
                        //}, {
                        //    name: '现钞买入',
                        //    type: 'line',
                        //    markPoint: {
                        //        data: [{ type: 'max', name: '最大值', symbolSize: 70 }]
                        //    },
                        //    data: data.map(function (item) {
                        //        return item[1];
                        //    })
                        //}
                    ]
                });
            }
            function drawQ195Lines(data) {
                $('#q195Div').width("680px");
                $('#q195Div').height("350px")
                var myChart = echarts.init(document.getElementById('q195Div'));

                myChart.setOption({
                    title: {
                        text: 'Q195',
                        x: 'center'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        top: 25,
                        left: 'right',
                        data: []
                    },
                    grid: {
                        left: 50,
                        right: 40
                    },
                    xAxis: {
                        data: data.map(function (item) {
                            return item.PublishDate;
                        }),
                        inverse: true
                    },
                    yAxis: {
                        name: 'Price',
                        min: 2500
                    },
                    series: [
                        {
                            name: 'Q195 Price',
                            type: 'line',
                            //markPoint: {
                            //    data: [{ type: 'min', name: '最小值', symbolSize: 70 }]
                            //},
                            data: data.map(function (item) {
                                return item.Price;
                            })
                        }
                    ]
                });
            }
        })

    </script>
}


